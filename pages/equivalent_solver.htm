<!DOCTYPE html>
<html lang="en">
<head>
  <title>Etoolbox - Equivalent Value Solver</title>
    
  <!-- DEFAULT LINKS, STYLES, AND SCRIPTS -->
	<meta name="etoolbox" charset="UTF-8" content="width=device-width, initial-scale=1">
  
	<link rel="icon" href="../resources/images/favicon.ico" />
	<link rel="stylesheet" href="../resources/css/styles.css">
	
	<script type="text/javascript" src="../resources/js/functions.js"></script>
	
	
	<!-- ADDITIONAL LINKS, STYLES, AND SCRIPTS -->
	<script type="text/javascript" src="../resources/js/equivalent_solver.js"></script>
    
</head>

<body>
	<div id="backdiv">
	
	<!-- HEADER -->
	<div class="header" id="top">
		<span class="title" style="font-size: 17px; font-weight: bold;">Michael's <span style="color:#EE0000">E</span>toolbox</span>
		<a target="_top" href="../index.htm">Index</a>
	</div>
	
	
	<!-- CALCULATOR -->
	<div class="card" id="calc">
		
		<!-- TITLE AND SHORT DESCRIPTION -->
		<h2 style="margin:0">Equivalent Value Solver</h2>
		<a href="#info" style="font-size:0.95em; font-weight:bold;">&#x2B9E; Further Information</a><br>
		<p>
			Solves for the equivalent value given a resistor, inductor, capacitor network formula.<br>
			Operators:
			<code>"+"</code>, Series connection. <code>"|"</code>, Parallel connection. <code>"("</code> and <code>")"</code> are parenthesis.<br>
			<br>
			Operations contained in parenthesis <code>"()"</code> are caluclated first with <code>"+"</code> series or <code>"|"</code> parallel being calculated by whichever is leftmost.
		</p>
		
		
		<!-- CALCULATOR INPUT TABLE FORM -->
		<form name="inputform" onkeydown="return event.key != 'Enter';">
		<table class="intable" style="padding:0; margin:0;">
			<tr>
				<td style="width:18%; padding:0; text-align: left;">
					Component Type
				</td>
				<td style="width: 80%; padding:0;">
					<select id="component_type" style="width:10em">
						<option value="0" selected="selected">Resistor/Inductor</option>
						<option value="1">Capacitor</option>
					</select>
					<label for="show_stack">
					<input type="checkbox" id="show_stack" style="margin: 0 6pt 0 12pt;">Show Stack Operations</label>
				</td>
			</tr>
			<tr>
				<td style="width:18%; padding:0; text-align: left;">
					Output Precision
				</td>
				<td style="width: 80%; padding:0;">
					<input style="width:3em; font-family:monospace;" type="number" id="precision" min="1" max="12" value="3">
				</td>
			</tr>
		</table>
		<br>
		
		Expression
		<!-- METRIC INPUT NOTE -->
		<span style="color:#A00; font-size:13px; float:right;" class="noprint">
			Metric (SI) suffixes such as p=pico, n=nano, u=micro, m=milli, k=kilo, M=mega, G=giga are valid.
		</span>
		<br>
		
		<div class="justified">
			<textarea type="text" id="formula_input" rows=1 onkeypress="return noenter(event);" style="resize:none; width:100%; margin: 5px 0 15px 0; padding: 6px;"></textarea>
		</div>
		
		
		<!-- CALCULATE BUTTON -->
		<div class="justified">
			<input type="button" style="width:80%; margin-right: 10px" onclick="equivalent_solver()" id="calc_button" value="Calculate">
			<input type="button" style="width:20%;" onclick="this.form.reset()" value="Clear">
		</div>
		
		<!-- OUTPUT -->
		<br>
		<span>Output</span>
		<span style="font-size:10pt; float:right;" id="time">Time: 0.0ms</span>
		<br>
		
		<div class="justified">
			<textarea id="output" rows=1 readonly></textarea>
		</div>
		
		</form>
		
		
		<script>
			// Pressing enter anywhere on page will trigger the calculate button if it has the ID "calculate_button"
			window.addEventListener( "keyup", (event) => {
				if (event.key === "Enter") {
					document.getElementById("calc_button").click() 
				} 
			} );
			
			// Disable enter key event on input or textarea when you add onkeypress="return noenter(event);" property
			function noenter(e) {
				e = e || window.event;
				var key = e.keyCode || e.charCode;
				return key !== 13; 
			}
		</script>
		
	</div>
	
	
	<!-- CALCULATION INFO CARD -->
	<div class="card" id="info">
		<h3 style="margin:0 0 12pt 0">Further Information</h3>
		The equivalent value solver calculates the equivalent value of a resistor/capacitor/inductor network.<br>
		<br>
		<span style="font-weight:bold">Resistors & Inductors</span><br>
		The equivalent value of resistors in series can be calculated by summing all the series resistor values together.<br>
		<code>Req = R1 + R2 + ... + Rn</code><br>
		<br>
		The equivalent value of resistors in parallel can be calculated by summing the inverse of all the parallel resistor values, and taking the inverse of the result.<br>
		<code>1/Req = 1/R1 + 1/R2 + ... + 1/Rn</code><br>
		<br>
		Like resistors, equivalent inductor values are calculated the same way.<br>
		<code>Series: Leq = L1 + L2 + ... + Ln</code><br>
		<code>Parallel: 1/Leq = 1/L1 + 1/L2 + ... + 1/Ln</code><br>
		<br>
		<span style="font-weight:bold">Capacitors</span><br>
		The equivalent value of capacitors in series can be calculated by summing the inverse of all the series capacitor values, and taking the inverse of the result.<br>
		<code>1/Ceq = 1/C1 + 1/C2 + ... + 1/Cn</code><br>
		<br>
		The equivalent value of capacitors in parallel can be calculated by summing all the parallel capacitor values together.<br>
		<code>Ceq = C1 + C2 + ... + Cn</code><br>
		<br>
		<span style="font-weight:bold">Calculator</span><br>
		The calculator operates by taking the input expression and using the shunting yard algorithm, parsing it into values and 
		operators, generating a Reverse Polish Notation expression, then obtaining the final result.<br>
		<br>
		<span style="font-weight:bold">Operators</span><br>
		The operator for parallel combinations is the ascii pipe symbol, "|". Normally a double pipe would be used but a single 
		pipe is used for simplicity.<br>
		Additionally the forward slash "/" can be used as well. For series connections the ascii plus "+" symbol is used.<br>
		<br>
		<span style="font-weight:bold">Reverse Polish Notation (RPN)</span><br>
		In Reverse Polish Notation, the operators follow their operands. This is also known as Postfix Notation. The notation does not need any parentheses for<br>
		as long as each operator has a fixed number of operands. RPN is a stack-oriented method of calculating long expressions, so it was used in this calculator.<br>
		<br>
		<span style="font-weight:bold">Shunting Yard Algorithm</span><br>
		<a href="https://en.wikipedia.org/wiki/Shunting_yard_algorithm">&#x2B9E; Wikipedia Page</a><br>
		<br><br><br>
		<a href="#top" style="font-size:0.95em; font-weight:bold;">&#x2B9E; Top</a><br>
	</div>
	
	
	
	<!-- FOOTER COPYRIGHT -->
	<div class="footer">
	<span style="font-size: 14px">Copyright &copy; <span id="year"></span> Michael Bell. All Rights Reserved.</span>
	<script>
		document.getElementById("year").innerHTML = new Date().getFullYear();
	</script>
	</div>
	
	</div>
</body>

</html>